sinnuccontentn$ACskew = (sinnuccontentn$FrA - sinnuccontentn$FrC)+(sinnuccontentn$FrA + sinnuccontentn$FrC)
cor.test(sinnuccontentn$TGskew, sinnuccontentn$ACskew)
euclidean(sinnuccontentn$TGskew, sinnuccontentn$ACskew)
euclidean <- function(a, b) sqrt(sum((a - b)^2))
euclidean(sinnuccontentn$TGskew, sinnuccontentn$ACskew)
cor.test(sinnuccontentn$TGskew, sinnuccontentn$ACskew)
#cor.test(sinnuccontentn$TGskew, sinnuccontentn$ACskew)
sinnuccontentn %>% rowwise() %>% mutate(meanTGACskew = median(c(TGskew, ACskew)))
merged_fr = merge(sinnuccontentm,sinnuccontentn, by="Species")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
data = read.csv("../data/1raw/Nuclear_codon_usage.csv")
data$Species = gsub(" ", "_", data$Species)
data$NeutralA = as.numeric(data$GCA..Ala.) + as.numeric(data$CGA..Arg.) + as.numeric(data$GGA..Gly.) + as.numeric(data$CTA..Leu.)  + as.numeric(data$CTA..Leu.)  + as.numeric(data$CCA..Pro.)  + as.numeric(data$TCA..Ser.)  + as.numeric(data$ACA..Thr.) + as.numeric(data$GTA..Val.)
data$NeutralT = as.numeric(data$GCT..Ala.) + as.numeric(data$CGT..Arg.) + as.numeric(data$GGT..Gly.) + as.numeric(data$CTT..Leu.)  + as.numeric(data$CTT..Leu.)  + as.numeric(data$CCT..Pro.)  + as.numeric(data$TCT..Ser.)  + as.numeric(data$ACT..Thr.) + as.numeric(data$GTT..Val.)
data$NeutralG = as.numeric(data$GCG..Ala.) + as.numeric(data$CGG..Arg.) + as.numeric(data$GGG..Gly.) + as.numeric(data$CTG..Leu.)  + as.numeric(data$CTG..Leu.)  + as.numeric(data$CCG..Pro.)  + as.numeric(data$TCG..Ser.)  + as.numeric(data$ACG..Thr.) + as.numeric(data$GTG..Val.)
data$NeutralC = as.numeric(data$GCC..Ala.) + as.numeric(data$CGC..Arg.) + as.numeric(data$GGC..Gly.) + as.numeric(data$CTC..Leu.)  + as.numeric(data$CTC..Leu.)  + as.numeric(data$CCC..Pro.)  + as.numeric(data$TCC..Ser.)  + as.numeric(data$ACC..Thr.) + as.numeric(data$GTC..Val.)
sinnuccontentn = aggregate(list(data$NeutralA,data$NeutralT,data$NeutralG,data$NeutralC), by = list(data$Species, data$Class), FUN = sum)
names(sinnuccontentn) = c('Species', 'Class', 'NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentn$FrA = sinnuccontentn$NeutralA / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrT = sinnuccontentn$NeutralT / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrG = sinnuccontentn$NeutralG / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrC = sinnuccontentn$NeutralC / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$TGskew = (sinnuccontentn$FrT - sinnuccontentn$FrG)+(sinnuccontentn$FrT + sinnuccontentn$FrG)
sinnuccontentn$ACskew = (sinnuccontentn$FrA - sinnuccontentn$FrC)+(sinnuccontentn$FrA + sinnuccontentn$FrC)
#cor.test(sinnuccontentn$TGskew, sinnuccontentn$ACskew)
sinnuccontentn %>% rowwise() %>% mutate(meanTGACskew = median(c(TGskew, ACskew)))
table(sinnuccontentn$Class)
data = read.csv("../data/1raw/Mitochondrial_codon_usage.csv")
data$Species = gsub(" ", "_", data$Species)
data$NeutralA = as.numeric(data$GCA..Ala.) + as.numeric(data$CGA..Arg.) + as.numeric(data$GGA..Gly.) + as.numeric(data$CTA..Leu.)  + as.numeric(data$CTA..Leu.)  + as.numeric(data$CCA..Pro.)  + as.numeric(data$TCA..Ser.)  + as.numeric(data$ACA..Thr.) + as.numeric(data$GTA..Val.)
data$NeutralT = as.numeric(data$GCT..Ala.) + as.numeric(data$CGT..Arg.) + as.numeric(data$GGT..Gly.) + as.numeric(data$CTT..Leu.)  + as.numeric(data$CTT..Leu.)  + as.numeric(data$CCT..Pro.)  + as.numeric(data$TCT..Ser.)  + as.numeric(data$ACT..Thr.) + as.numeric(data$GTT..Val.)
data$NeutralG = as.numeric(data$GCG..Ala.) + as.numeric(data$CGG..Arg.) + as.numeric(data$GGG..Gly.) + as.numeric(data$CTG..Leu.)  + as.numeric(data$CTG..Leu.)  + as.numeric(data$CCG..Pro.)  + as.numeric(data$TCG..Ser.)  + as.numeric(data$ACG..Thr.) + as.numeric(data$GTG..Val.)
data$NeutralC = as.numeric(data$GCC..Ala.) + as.numeric(data$CGC..Arg.) + as.numeric(data$GGC..Gly.) + as.numeric(data$CTC..Leu.)  + as.numeric(data$CTC..Leu.)  + as.numeric(data$CCC..Pro.)  + as.numeric(data$TCC..Ser.)  + as.numeric(data$ACC..Thr.) + as.numeric(data$GTC..Val.)
sinnuccontentm = aggregate(list(data$NeutralA,data$NeutralT,data$NeutralG,data$NeutralC), by = list(data$Species, data$Class), FUN = sum)
names(sinnuccontentm) = c('Species', 'Class', 'NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentm$FrA = sinnuccontentm$NeutralA / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrT = sinnuccontentm$NeutralT / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrG = sinnuccontentm$NeutralG / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrC = sinnuccontentm$NeutralC / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$GAskew.heavy = (sinnuccontentm$FrA-sinnuccontentm$FrG)/(sinnuccontentm$FrA+sinnuccontentm$FrG)
table(sinnuccontentm$Class)
sinnuccontentmOUR = read.table("../data/2derived/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
sinnuccontentmOUR = aggregate(list(sinnuccontentmOUR$NeutralA,sinnuccontentmOUR$NeutralT,sinnuccontentmOUR$NeutralG,sinnuccontentmOUR$NeutralC), by = list(sinnuccontentmOUR$Species), FUN = sum)
names(sinnuccontentmOUR) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentmOUR$FrA = sinnuccontentmOUR$NeutralA / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrT= sinnuccontentmOUR$NeutralT / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrG = sinnuccontentmOUR$NeutralG / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrC = sinnuccontentmOUR$NeutralC / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$GAskew.heavy = (sinnuccontentmOUR$FrA-sinnuccontentmOUR$FrG)/(sinnuccontentmOUR$FrG+sinnuccontentmOUR$FrA)
#temp = merge(sinnuccontentm,sinnuccontentmOUR, by="Species")
#cor.test(temp$GAskew.heavy.x, temp$GAskew.heavy.y)
merged_fr = merge(sinnuccontentm,sinnuccontentn, by="Species")
View(merged_fr)
View(sinnuccontentm)
#cor.test(sinnuccontentn$TGskew, sinnuccontentn$ACskew)
sinnuccontentn = sinnuccontentn %>% rowwise() %>% mutate(meanTGACskew = median(c(TGskew, ACskew)))
merged_fr = merge(sinnuccontentm,sinnuccontentn, by="Species")
cor.test(merged_fr$GAskew.heavy, merged_fr$meanTGACskew, method = "spearman")
ggviolin(sinnuccontentn, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrT",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentn, x = "Class", y = "FrG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentn, x = "Class", y = "meanTGACskew", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "meanTGACskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
wilcox.test(sinnuccontentn[sinnuccontentn$Class == "Mammalia",]$FrT, sinnuccontentn[sinnuccontentn$Class == "Aves",]$FrT, paired=F)
ggviolin(sinnuccontentn, x = "Class", y = "FrT", select = c("Actinopterygii", "Reptilia"), ylab = "FrT",
order=c("Actinopterygii", "Reptilia"), add = "boxplot", fill="Class", palette=c("#6760db", "#9145c4"), yscale = "log2")
wilcox.test(sinnuccontentn[sinnuccontentn$Class == "Actinopterygii",]$FrT, sinnuccontentn[sinnuccontentn$Class == "Reptilia",]$FrT, paired=F)
ggviolin(sinnuccontentn, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrT",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentn, x = "Class", y = "FrG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentn, x = "Class", y = "meanTGACskew", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "meanTGACskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(sinnuccontentn, x = "Class", y = "FrT", select = c("Mammalia","Aves"), ylab = "FrT",
order=c("Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#c73a69", "#c2464c"), yscale = "log2")
wilcox.test(sinnuccontentn[sinnuccontentn$Class == "Mammalia",]$FrT, sinnuccontentn[sinnuccontentn$Class == "Aves",]$FrT, paired=F)
ggviolin(sinnuccontentn, x = "Class", y = "FrT", select = c("Actinopterygii", "Reptilia"), ylab = "FrT",
order=c("Actinopterygii", "Reptilia"), add = "boxplot", fill="Class", palette=c("#6760db", "#9145c4"), yscale = "log2")
wilcox.test(sinnuccontentn[sinnuccontentn$Class == "Actinopterygii",]$FrT, sinnuccontentn[sinnuccontentn$Class == "Reptilia",]$FrT, paired=F)
?desc_statby
ggviolin(sinnuccontentn, x = "Class", y = "FrT", select = c("Actinopterygii", "Reptilia"), ylab = "FrT",
order=c("Actinopterygii", "Reptilia"), add = "boxplot", fill="Class", palette=c("#6760db", "#9145c4"), yscale = "log2", add="length")
ggviolin(sinnuccontentm, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrA",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentm, x = "Class", y = "FrC", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentm, x = "Class", y = "GAskew.heavy", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "GAskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(sinnuccontentm[sinnuccontentm$Class %in% colder,]$GAskew.heavy, sinnuccontentm[ALL$sinnuccontentm %in% warmer,]$GAskew.heavy, paired=F)
ggviolin(sinnuccontentm, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrA",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentm, x = "Class", y = "FrC", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentm, x = "Class", y = "GAskew.heavy", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "GAskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(sinnuccontentm[sinnuccontentm$Class %in% colder,]$GAskew.heavy, sinnuccontentm[sinnuccontentm$sinnuccontentm %in% warmer,]$GAskew.heavy, paired=F)
ggviolin(sinnuccontentm, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrA",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentm, x = "Class", y = "FrC", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentm, x = "Class", y = "GAskew.heavy", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "GAskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(sinnuccontentm[sinnuccontentm$Class %in% colder,]$GAskew.heavy, sinnuccontentm[sinnuccontentm$warmer %in% warmer,]$GAskew.heavy, paired=F)
ggviolin(sinnuccontentm, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrA",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentm, x = "Class", y = "FrC", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentm, x = "Class", y = "GAskew.heavy", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "GAskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(sinnuccontentm[sinnuccontentm$Class %in% colder,]$GAskew.heavy, sinnuccontentm[sinnuccontentm$Class %in% warmer,]$GAskew.heavy, paired=F)
ggviolin(sinnuccontentmOUR, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrA",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentmOUR, x = "Class", y = "FrC", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentmOUR, x = "Class", y = "GAskew.heavy", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "GAskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(sinnuccontentmOUR[sinnuccontentmOUR$Class %in% colder,]$GAskew.heavy, sinnuccontentmOUR[sinnuccontentmOUR$Class %in% warmer,]$GAskew.heavy, paired=F)
taxavictor = read.table('../data/1raw/Classes_from_Victor.txt', header = T)
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
taxa = rbind(taxa, AAtaxa)
taxa = rbind(taxa, taxavictor)
taxa = taxa[!duplicated(taxa$Species),]
sinnuccontentmOUR = merge(sinnuccontentmOUR, taxa, all.x = T)
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
taxa = rbind(taxa, AAtaxa)
taxa = taxa[!duplicated(taxa$Species),]
sinnuccontentmOUR = merge(sinnuccontentmOUR, taxa, all.x = T)
wilcox.test(sinnuccontentm[sinnuccontentm$Class %in% colder,]$GAskew.heavy, sinnuccontentm[sinnuccontentm$Class %in% warmer,]$GAskew.heavy, paired=F)
wilcox.test(sinnuccontentmOUR[sinnuccontentmOUR$Class %in% colder,]$GAskew.heavy, sinnuccontentmOUR[sinnuccontentmOUR$Class %in% warmer,]$GAskew.heavy, paired=F)
View(sinnuccontentmOUR)
ggviolin(sinnuccontentmOUR, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrA",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentmOUR, x = "Class", y = "FrC", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentmOUR, x = "Class", y = "GAskew.heavy", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "GAskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
wilcox.test(sinnuccontentn[sinnuccontentn$Class %in% colder,]$meanTGACskew, sinnuccontentn[sinnuccontentn$Class %in% warmer,]$meanTGACskew, paired=F)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
data = read.csv("../data/1raw/Nuclear_codon_usage.csv")
data$Species = gsub(" ", "_", data$Species)
data$NeutralA = as.numeric(data$GCA..Ala.) + as.numeric(data$CGA..Arg.) + as.numeric(data$GGA..Gly.) + as.numeric(data$CTA..Leu.)  + as.numeric(data$CTA..Leu.)  + as.numeric(data$CCA..Pro.)  + as.numeric(data$TCA..Ser.)  + as.numeric(data$ACA..Thr.) + as.numeric(data$GTA..Val.)
data$NeutralT = as.numeric(data$GCT..Ala.) + as.numeric(data$CGT..Arg.) + as.numeric(data$GGT..Gly.) + as.numeric(data$CTT..Leu.)  + as.numeric(data$CTT..Leu.)  + as.numeric(data$CCT..Pro.)  + as.numeric(data$TCT..Ser.)  + as.numeric(data$ACT..Thr.) + as.numeric(data$GTT..Val.)
data$NeutralG = as.numeric(data$GCG..Ala.) + as.numeric(data$CGG..Arg.) + as.numeric(data$GGG..Gly.) + as.numeric(data$CTG..Leu.)  + as.numeric(data$CTG..Leu.)  + as.numeric(data$CCG..Pro.)  + as.numeric(data$TCG..Ser.)  + as.numeric(data$ACG..Thr.) + as.numeric(data$GTG..Val.)
data$NeutralC = as.numeric(data$GCC..Ala.) + as.numeric(data$CGC..Arg.) + as.numeric(data$GGC..Gly.) + as.numeric(data$CTC..Leu.)  + as.numeric(data$CTC..Leu.)  + as.numeric(data$CCC..Pro.)  + as.numeric(data$TCC..Ser.)  + as.numeric(data$ACC..Thr.) + as.numeric(data$GTC..Val.)
sinnuccontentn = aggregate(list(data$NeutralA,data$NeutralT,data$NeutralG,data$NeutralC), by = list(data$Species, data$Class), FUN = sum)
names(sinnuccontentn) = c('Species', 'Class', 'NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentn$FrA = sinnuccontentn$NeutralA / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrT = sinnuccontentn$NeutralT / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrG = sinnuccontentn$NeutralG / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrC = sinnuccontentn$NeutralC / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$TGskew = (sinnuccontentn$FrT - sinnuccontentn$FrG)+(sinnuccontentn$FrT + sinnuccontentn$FrG)
sinnuccontentn$ACskew = (sinnuccontentn$FrA - sinnuccontentn$FrC)+(sinnuccontentn$FrA + sinnuccontentn$FrC)
#cor.test(sinnuccontentn$TGskew, sinnuccontentn$ACskew)
sinnuccontentn = sinnuccontentn %>% rowwise() %>% mutate(meanTGACskew = median(c(TGskew, ACskew)))
table(sinnuccontentn$Class)
data = read.csv("../data/1raw/Mitochondrial_codon_usage.csv")
data$Species = gsub(" ", "_", data$Species)
data$NeutralA = as.numeric(data$GCA..Ala.) + as.numeric(data$CGA..Arg.) + as.numeric(data$GGA..Gly.) + as.numeric(data$CTA..Leu.)  + as.numeric(data$CTA..Leu.)  + as.numeric(data$CCA..Pro.)  + as.numeric(data$TCA..Ser.)  + as.numeric(data$ACA..Thr.) + as.numeric(data$GTA..Val.)
data$NeutralT = as.numeric(data$GCT..Ala.) + as.numeric(data$CGT..Arg.) + as.numeric(data$GGT..Gly.) + as.numeric(data$CTT..Leu.)  + as.numeric(data$CTT..Leu.)  + as.numeric(data$CCT..Pro.)  + as.numeric(data$TCT..Ser.)  + as.numeric(data$ACT..Thr.) + as.numeric(data$GTT..Val.)
data$NeutralG = as.numeric(data$GCG..Ala.) + as.numeric(data$CGG..Arg.) + as.numeric(data$GGG..Gly.) + as.numeric(data$CTG..Leu.)  + as.numeric(data$CTG..Leu.)  + as.numeric(data$CCG..Pro.)  + as.numeric(data$TCG..Ser.)  + as.numeric(data$ACG..Thr.) + as.numeric(data$GTG..Val.)
data$NeutralC = as.numeric(data$GCC..Ala.) + as.numeric(data$CGC..Arg.) + as.numeric(data$GGC..Gly.) + as.numeric(data$CTC..Leu.)  + as.numeric(data$CTC..Leu.)  + as.numeric(data$CCC..Pro.)  + as.numeric(data$TCC..Ser.)  + as.numeric(data$ACC..Thr.) + as.numeric(data$GTC..Val.)
sinnuccontentm = aggregate(list(data$NeutralA,data$NeutralT,data$NeutralG,data$NeutralC), by = list(data$Species, data$Class), FUN = sum)
names(sinnuccontentm) = c('Species', 'Class', 'NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentm$FrA = sinnuccontentm$NeutralA / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrT = sinnuccontentm$NeutralT / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrG = sinnuccontentm$NeutralG / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrC = sinnuccontentm$NeutralC / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$GAskew.heavy = (sinnuccontentm$FrC-sinnuccontentm$FrT)/(sinnuccontentm$FrT+sinnuccontentm$FrC)
table(sinnuccontentm$Class)
sinnuccontentmOUR = read.table("../data/2derived/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
sinnuccontentmOUR = aggregate(list(sinnuccontentmOUR$NeutralA,sinnuccontentmOUR$NeutralT,sinnuccontentmOUR$NeutralG,sinnuccontentmOUR$NeutralC), by = list(sinnuccontentmOUR$Species), FUN = sum)
names(sinnuccontentmOUR) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentmOUR$FrA = sinnuccontentmOUR$NeutralA / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrT= sinnuccontentmOUR$NeutralT / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrG = sinnuccontentmOUR$NeutralG / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrC = sinnuccontentmOUR$NeutralC / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$GAskew.heavy = (sinnuccontentm$FrC-sinnuccontentm$FrT)/(sinnuccontentm$FrT+sinnuccontentm$FrC)
ggviolin(sinnuccontentm, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrA",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentm, x = "Class", y = "FrC", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentm, x = "Class", y = "GAskew.heavy", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "GAskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(sinnuccontentm[sinnuccontentm$Class %in% colder,]$GAskew.heavy, sinnuccontentm[sinnuccontentm$Class %in% warmer,]$GAskew.heavy, paired=F)
ggviolin(sinnuccontentmOUR, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrA",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentmOUR, x = "Class", y = "FrC", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentmOUR, x = "Class", y = "GAskew.heavy", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "GAskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
sinnuccontentmOUR$GAskew.heavy = (sinnuccontentm$FrC-sinnuccontentm$FrT)/(sinnuccontentm$FrT+sinnuccontentm$FrC)
sinnuccontentmOUR = read.table("../data/2derived/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
sinnuccontentmOUR = aggregate(list(sinnuccontentmOUR$NeutralA,sinnuccontentmOUR$NeutralT,sinnuccontentmOUR$NeutralG,sinnuccontentmOUR$NeutralC), by = list(sinnuccontentmOUR$Species), FUN = sum)
names(sinnuccontentmOUR) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentmOUR$FrA = sinnuccontentmOUR$NeutralA / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrT= sinnuccontentmOUR$NeutralT / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrG = sinnuccontentmOUR$NeutralG / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrC = sinnuccontentmOUR$NeutralC / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$GAskew.heavy = (sinnuccontentm$FrC-sinnuccontentm$FrT)/(sinnuccontentm$FrT+sinnuccontentm$FrC)
(sinnuccontentm$FrC-sinnuccontentm$FrT)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
data = read.csv("../data/1raw/Nuclear_codon_usage.csv")
data$Species = gsub(" ", "_", data$Species)
data$NeutralA = as.numeric(data$GCA..Ala.) + as.numeric(data$CGA..Arg.) + as.numeric(data$GGA..Gly.) + as.numeric(data$CTA..Leu.)  + as.numeric(data$CTA..Leu.)  + as.numeric(data$CCA..Pro.)  + as.numeric(data$TCA..Ser.)  + as.numeric(data$ACA..Thr.) + as.numeric(data$GTA..Val.)
data$NeutralT = as.numeric(data$GCT..Ala.) + as.numeric(data$CGT..Arg.) + as.numeric(data$GGT..Gly.) + as.numeric(data$CTT..Leu.)  + as.numeric(data$CTT..Leu.)  + as.numeric(data$CCT..Pro.)  + as.numeric(data$TCT..Ser.)  + as.numeric(data$ACT..Thr.) + as.numeric(data$GTT..Val.)
data$NeutralG = as.numeric(data$GCG..Ala.) + as.numeric(data$CGG..Arg.) + as.numeric(data$GGG..Gly.) + as.numeric(data$CTG..Leu.)  + as.numeric(data$CTG..Leu.)  + as.numeric(data$CCG..Pro.)  + as.numeric(data$TCG..Ser.)  + as.numeric(data$ACG..Thr.) + as.numeric(data$GTG..Val.)
data$NeutralC = as.numeric(data$GCC..Ala.) + as.numeric(data$CGC..Arg.) + as.numeric(data$GGC..Gly.) + as.numeric(data$CTC..Leu.)  + as.numeric(data$CTC..Leu.)  + as.numeric(data$CCC..Pro.)  + as.numeric(data$TCC..Ser.)  + as.numeric(data$ACC..Thr.) + as.numeric(data$GTC..Val.)
sinnuccontentn = aggregate(list(data$NeutralA,data$NeutralT,data$NeutralG,data$NeutralC), by = list(data$Species, data$Class), FUN = sum)
names(sinnuccontentn) = c('Species', 'Class', 'NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentn$FrA = sinnuccontentn$NeutralA / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrT = sinnuccontentn$NeutralT / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrG = sinnuccontentn$NeutralG / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrC = sinnuccontentn$NeutralC / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$TGskew = (sinnuccontentn$FrT - sinnuccontentn$FrG)+(sinnuccontentn$FrT + sinnuccontentn$FrG)
sinnuccontentn$ACskew = (sinnuccontentn$FrA - sinnuccontentn$FrC)+(sinnuccontentn$FrA + sinnuccontentn$FrC)
#cor.test(sinnuccontentn$TGskew, sinnuccontentn$ACskew)
sinnuccontentn = sinnuccontentn %>% rowwise() %>% mutate(meanTGACskew = median(c(TGskew, ACskew)))
table(sinnuccontentn$Class)
data = read.csv("../data/1raw/Mitochondrial_codon_usage.csv")
data$Species = gsub(" ", "_", data$Species)
data$NeutralA = as.numeric(data$GCA..Ala.) + as.numeric(data$CGA..Arg.) + as.numeric(data$GGA..Gly.) + as.numeric(data$CTA..Leu.)  + as.numeric(data$CTA..Leu.)  + as.numeric(data$CCA..Pro.)  + as.numeric(data$TCA..Ser.)  + as.numeric(data$ACA..Thr.) + as.numeric(data$GTA..Val.)
data$NeutralT = as.numeric(data$GCT..Ala.) + as.numeric(data$CGT..Arg.) + as.numeric(data$GGT..Gly.) + as.numeric(data$CTT..Leu.)  + as.numeric(data$CTT..Leu.)  + as.numeric(data$CCT..Pro.)  + as.numeric(data$TCT..Ser.)  + as.numeric(data$ACT..Thr.) + as.numeric(data$GTT..Val.)
data$NeutralG = as.numeric(data$GCG..Ala.) + as.numeric(data$CGG..Arg.) + as.numeric(data$GGG..Gly.) + as.numeric(data$CTG..Leu.)  + as.numeric(data$CTG..Leu.)  + as.numeric(data$CCG..Pro.)  + as.numeric(data$TCG..Ser.)  + as.numeric(data$ACG..Thr.) + as.numeric(data$GTG..Val.)
data$NeutralC = as.numeric(data$GCC..Ala.) + as.numeric(data$CGC..Arg.) + as.numeric(data$GGC..Gly.) + as.numeric(data$CTC..Leu.)  + as.numeric(data$CTC..Leu.)  + as.numeric(data$CCC..Pro.)  + as.numeric(data$TCC..Ser.)  + as.numeric(data$ACC..Thr.) + as.numeric(data$GTC..Val.)
sinnuccontentm = aggregate(list(data$NeutralA,data$NeutralT,data$NeutralG,data$NeutralC), by = list(data$Species, data$Class), FUN = sum)
names(sinnuccontentm) = c('Species', 'Class', 'NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentm$FrA = sinnuccontentm$NeutralA / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrT = sinnuccontentm$NeutralT / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrG = sinnuccontentm$NeutralG / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrC = sinnuccontentm$NeutralC / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$GAskew.heavy = (sinnuccontentm$FrC-sinnuccontentm$FrT)/(sinnuccontentm$FrT+sinnuccontentm$FrC)
table(sinnuccontentm$Class)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
data = read.csv("../data/1raw/Nuclear_codon_usage.csv")
data$Species = gsub(" ", "_", data$Species)
data$NeutralA = as.numeric(data$GCA..Ala.) + as.numeric(data$CGA..Arg.) + as.numeric(data$GGA..Gly.) + as.numeric(data$CTA..Leu.)  + as.numeric(data$CTA..Leu.)  + as.numeric(data$CCA..Pro.)  + as.numeric(data$TCA..Ser.)  + as.numeric(data$ACA..Thr.) + as.numeric(data$GTA..Val.)
data$NeutralT = as.numeric(data$GCT..Ala.) + as.numeric(data$CGT..Arg.) + as.numeric(data$GGT..Gly.) + as.numeric(data$CTT..Leu.)  + as.numeric(data$CTT..Leu.)  + as.numeric(data$CCT..Pro.)  + as.numeric(data$TCT..Ser.)  + as.numeric(data$ACT..Thr.) + as.numeric(data$GTT..Val.)
data$NeutralG = as.numeric(data$GCG..Ala.) + as.numeric(data$CGG..Arg.) + as.numeric(data$GGG..Gly.) + as.numeric(data$CTG..Leu.)  + as.numeric(data$CTG..Leu.)  + as.numeric(data$CCG..Pro.)  + as.numeric(data$TCG..Ser.)  + as.numeric(data$ACG..Thr.) + as.numeric(data$GTG..Val.)
data$NeutralC = as.numeric(data$GCC..Ala.) + as.numeric(data$CGC..Arg.) + as.numeric(data$GGC..Gly.) + as.numeric(data$CTC..Leu.)  + as.numeric(data$CTC..Leu.)  + as.numeric(data$CCC..Pro.)  + as.numeric(data$TCC..Ser.)  + as.numeric(data$ACC..Thr.) + as.numeric(data$GTC..Val.)
sinnuccontentn = aggregate(list(data$NeutralA,data$NeutralT,data$NeutralG,data$NeutralC), by = list(data$Species, data$Class), FUN = sum)
names(sinnuccontentn) = c('Species', 'Class', 'NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentn$FrA = sinnuccontentn$NeutralA / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrT = sinnuccontentn$NeutralT / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrG = sinnuccontentn$NeutralG / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrC = sinnuccontentn$NeutralC / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$TGskew = (sinnuccontentn$FrT - sinnuccontentn$FrG)+(sinnuccontentn$FrT + sinnuccontentn$FrG)
sinnuccontentn$ACskew = (sinnuccontentn$FrA - sinnuccontentn$FrC)+(sinnuccontentn$FrA + sinnuccontentn$FrC)
#cor.test(sinnuccontentn$TGskew, sinnuccontentn$ACskew)
sinnuccontentn = sinnuccontentn %>% rowwise() %>% mutate(meanTGACskew = median(c(TGskew, ACskew)))
table(sinnuccontentn$Class)
data = read.csv("../data/1raw/Mitochondrial_codon_usage.csv")
data$Species = gsub(" ", "_", data$Species)
data$NeutralA = as.numeric(data$GCA..Ala.) + as.numeric(data$CGA..Arg.) + as.numeric(data$GGA..Gly.) + as.numeric(data$CTA..Leu.)  + as.numeric(data$CTA..Leu.)  + as.numeric(data$CCA..Pro.)  + as.numeric(data$TCA..Ser.)  + as.numeric(data$ACA..Thr.) + as.numeric(data$GTA..Val.)
data$NeutralT = as.numeric(data$GCT..Ala.) + as.numeric(data$CGT..Arg.) + as.numeric(data$GGT..Gly.) + as.numeric(data$CTT..Leu.)  + as.numeric(data$CTT..Leu.)  + as.numeric(data$CCT..Pro.)  + as.numeric(data$TCT..Ser.)  + as.numeric(data$ACT..Thr.) + as.numeric(data$GTT..Val.)
data$NeutralG = as.numeric(data$GCG..Ala.) + as.numeric(data$CGG..Arg.) + as.numeric(data$GGG..Gly.) + as.numeric(data$CTG..Leu.)  + as.numeric(data$CTG..Leu.)  + as.numeric(data$CCG..Pro.)  + as.numeric(data$TCG..Ser.)  + as.numeric(data$ACG..Thr.) + as.numeric(data$GTG..Val.)
data$NeutralC = as.numeric(data$GCC..Ala.) + as.numeric(data$CGC..Arg.) + as.numeric(data$GGC..Gly.) + as.numeric(data$CTC..Leu.)  + as.numeric(data$CTC..Leu.)  + as.numeric(data$CCC..Pro.)  + as.numeric(data$TCC..Ser.)  + as.numeric(data$ACC..Thr.) + as.numeric(data$GTC..Val.)
sinnuccontentm = aggregate(list(data$NeutralA,data$NeutralT,data$NeutralG,data$NeutralC), by = list(data$Species, data$Class), FUN = sum)
names(sinnuccontentm) = c('Species', 'Class', 'NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentm$FrA = sinnuccontentm$NeutralA / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrT = sinnuccontentm$NeutralT / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrG = sinnuccontentm$NeutralG / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrC = sinnuccontentm$NeutralC / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$GAskew.heavy = (sinnuccontentm$FrC-sinnuccontentm$FrT)/(sinnuccontentm$FrT+sinnuccontentm$FrC)
table(sinnuccontentm$Class)
sinnuccontentmOUR = read.table("../data/2derived/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
sinnuccontentmOUR = aggregate(list(sinnuccontentmOUR$NeutralA,sinnuccontentmOUR$NeutralT,sinnuccontentmOUR$NeutralG,sinnuccontentmOUR$NeutralC), by = list(sinnuccontentmOUR$Species), FUN = sum)
names(sinnuccontentmOUR) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentmOUR$FrA = sinnuccontentmOUR$NeutralA / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrT= sinnuccontentmOUR$NeutralT / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrG = sinnuccontentmOUR$NeutralG / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrC = sinnuccontentmOUR$NeutralC / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$GAskew.heavy = (sinnuccontentmOUR$FrC-sinnuccontentmOUR$FrT)/(sinnuccontentmOUR$FrT+sinnuccontentmOUR$FrC)
table(sinnuccontentm$Class)
###Adding taxa
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
taxa = rbind(taxa, AAtaxa)
taxa = taxa[!duplicated(taxa$Species),]
sinnuccontentmOUR = merge(sinnuccontentmOUR, taxa, all.x = T)
#temp = merge(sinnuccontentm,sinnuccontentmOUR, by="Species")
#cor.test(temp$GAskew.heavy.x, temp$GAskew.heavy.y)
merged_fr = merge(sinnuccontentm,sinnuccontentn, by="Species")
cor.test(merged_fr$GAskew.heavy, merged_fr$meanTGACskew, method = "spearman")
ggviolin(sinnuccontentn, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrT",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentn, x = "Class", y = "FrG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentn, x = "Class", y = "meanTGACskew", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "meanTGACskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(sinnuccontentn[sinnuccontentn$Class %in% colder,]$meanTGACskew, sinnuccontentn[sinnuccontentn$Class %in% warmer,]$meanTGACskew, paired=F)
ggviolin(sinnuccontentn, x = "Class", y = "FrT", select = c("Mammalia","Aves"), ylab = "FrT",
order=c("Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#c73a69", "#c2464c"), yscale = "log2")
wilcox.test(sinnuccontentn[sinnuccontentn$Class == "Mammalia",]$FrT, sinnuccontentn[sinnuccontentn$Class == "Aves",]$FrT, paired=F)
ggviolin(sinnuccontentn, x = "Class", y = "FrT", select = c("Actinopterygii", "Reptilia"), ylab = "FrT",
order=c("Actinopterygii", "Reptilia"), add = "boxplot", fill="Class", palette=c("#6760db", "#9145c4"), yscale = "log2")
wilcox.test(sinnuccontentn[sinnuccontentn$Class == "Actinopterygii",]$FrT, sinnuccontentn[sinnuccontentn$Class == "Reptilia",]$FrT, paired=F)
ggviolin(sinnuccontentm, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrA",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentm, x = "Class", y = "FrC", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentm, x = "Class", y = "GAskew.heavy", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "GAskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(sinnuccontentm[sinnuccontentm$Class %in% colder,]$GAskew.heavy, sinnuccontentm[sinnuccontentm$Class %in% warmer,]$GAskew.heavy, paired=F)
ggviolin(sinnuccontentmOUR, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrA",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentmOUR, x = "Class", y = "FrC", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentmOUR, x = "Class", y = "GAskew.heavy", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "GAskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(sinnuccontentmOUR[sinnuccontentmOUR$Class %in% colder,]$GAskew.heavy, sinnuccontentmOUR[sinnuccontentmOUR$Class %in% warmer,]$GAskew.heavy, paired=F)
table(sinnuccontentmOUR$Class)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
data = read.csv("../data/1raw/Nuclear_codon_usage.csv")
data$Species = gsub(" ", "_", data$Species)
data$NeutralA = as.numeric(data$GCA..Ala.) + as.numeric(data$CGA..Arg.) + as.numeric(data$GGA..Gly.) + as.numeric(data$CTA..Leu.)  + as.numeric(data$CTA..Leu.)  + as.numeric(data$CCA..Pro.)  + as.numeric(data$TCA..Ser.)  + as.numeric(data$ACA..Thr.) + as.numeric(data$GTA..Val.)
data$NeutralT = as.numeric(data$GCT..Ala.) + as.numeric(data$CGT..Arg.) + as.numeric(data$GGT..Gly.) + as.numeric(data$CTT..Leu.)  + as.numeric(data$CTT..Leu.)  + as.numeric(data$CCT..Pro.)  + as.numeric(data$TCT..Ser.)  + as.numeric(data$ACT..Thr.) + as.numeric(data$GTT..Val.)
data$NeutralG = as.numeric(data$GCG..Ala.) + as.numeric(data$CGG..Arg.) + as.numeric(data$GGG..Gly.) + as.numeric(data$CTG..Leu.)  + as.numeric(data$CTG..Leu.)  + as.numeric(data$CCG..Pro.)  + as.numeric(data$TCG..Ser.)  + as.numeric(data$ACG..Thr.) + as.numeric(data$GTG..Val.)
data$NeutralC = as.numeric(data$GCC..Ala.) + as.numeric(data$CGC..Arg.) + as.numeric(data$GGC..Gly.) + as.numeric(data$CTC..Leu.)  + as.numeric(data$CTC..Leu.)  + as.numeric(data$CCC..Pro.)  + as.numeric(data$TCC..Ser.)  + as.numeric(data$ACC..Thr.) + as.numeric(data$GTC..Val.)
sinnuccontentn = aggregate(list(data$NeutralA,data$NeutralT,data$NeutralG,data$NeutralC), by = list(data$Species, data$Class), FUN = sum)
names(sinnuccontentn) = c('Species', 'Class', 'NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentn$FrA = sinnuccontentn$NeutralA / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrT = sinnuccontentn$NeutralT / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrG = sinnuccontentn$NeutralG / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$FrC = sinnuccontentn$NeutralC / (sinnuccontentn$NeutralA + sinnuccontentn$NeutralT + sinnuccontentn$NeutralG + sinnuccontentn$NeutralC)
sinnuccontentn$TGskew = (sinnuccontentn$FrT - sinnuccontentn$FrG)+(sinnuccontentn$FrT + sinnuccontentn$FrG)
sinnuccontentn$ACskew = (sinnuccontentn$FrA - sinnuccontentn$FrC)+(sinnuccontentn$FrA + sinnuccontentn$FrC)
#cor.test(sinnuccontentn$TGskew, sinnuccontentn$ACskew)
sinnuccontentn = sinnuccontentn %>% rowwise() %>% mutate(meanTGACskew = median(c(TGskew, ACskew)))
table(sinnuccontentn$Class)
data = read.csv("../data/1raw/Mitochondrial_codon_usage.csv")
data$Species = gsub(" ", "_", data$Species)
data$NeutralA = as.numeric(data$GCA..Ala.) + as.numeric(data$CGA..Arg.) + as.numeric(data$GGA..Gly.) + as.numeric(data$CTA..Leu.)  + as.numeric(data$CTA..Leu.)  + as.numeric(data$CCA..Pro.)  + as.numeric(data$TCA..Ser.)  + as.numeric(data$ACA..Thr.) + as.numeric(data$GTA..Val.)
data$NeutralT = as.numeric(data$GCT..Ala.) + as.numeric(data$CGT..Arg.) + as.numeric(data$GGT..Gly.) + as.numeric(data$CTT..Leu.)  + as.numeric(data$CTT..Leu.)  + as.numeric(data$CCT..Pro.)  + as.numeric(data$TCT..Ser.)  + as.numeric(data$ACT..Thr.) + as.numeric(data$GTT..Val.)
data$NeutralG = as.numeric(data$GCG..Ala.) + as.numeric(data$CGG..Arg.) + as.numeric(data$GGG..Gly.) + as.numeric(data$CTG..Leu.)  + as.numeric(data$CTG..Leu.)  + as.numeric(data$CCG..Pro.)  + as.numeric(data$TCG..Ser.)  + as.numeric(data$ACG..Thr.) + as.numeric(data$GTG..Val.)
data$NeutralC = as.numeric(data$GCC..Ala.) + as.numeric(data$CGC..Arg.) + as.numeric(data$GGC..Gly.) + as.numeric(data$CTC..Leu.)  + as.numeric(data$CTC..Leu.)  + as.numeric(data$CCC..Pro.)  + as.numeric(data$TCC..Ser.)  + as.numeric(data$ACC..Thr.) + as.numeric(data$GTC..Val.)
sinnuccontentm = aggregate(list(data$NeutralA,data$NeutralT,data$NeutralG,data$NeutralC), by = list(data$Species, data$Class), FUN = sum)
names(sinnuccontentm) = c('Species', 'Class', 'NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentm$FrA = sinnuccontentm$NeutralA / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrT = sinnuccontentm$NeutralT / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrG = sinnuccontentm$NeutralG / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$FrC = sinnuccontentm$NeutralC / (sinnuccontentm$NeutralA + sinnuccontentm$NeutralT + sinnuccontentm$NeutralG + sinnuccontentm$NeutralC)
sinnuccontentm$GAskew.heavy = (sinnuccontentm$FrC-sinnuccontentm$FrT)/(sinnuccontentm$FrT+sinnuccontentm$FrC)
table(sinnuccontentm$Class)
sinnuccontentmOUR = read.table("../data/2derived/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
sinnuccontentmOUR = aggregate(list(sinnuccontentmOUR$NeutralA,sinnuccontentmOUR$NeutralT,sinnuccontentmOUR$NeutralG,sinnuccontentmOUR$NeutralC), by = list(sinnuccontentmOUR$Species), FUN = sum)
names(sinnuccontentmOUR) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontentmOUR$FrA = sinnuccontentmOUR$NeutralA / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrT= sinnuccontentmOUR$NeutralT / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrG = sinnuccontentmOUR$NeutralG / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$FrC = sinnuccontentmOUR$NeutralC / (sinnuccontentmOUR$NeutralA + sinnuccontentmOUR$NeutralT + sinnuccontentmOUR$NeutralG + sinnuccontentmOUR$NeutralC)
sinnuccontentmOUR$GAskew.heavy = (sinnuccontentmOUR$FrC-sinnuccontentmOUR$FrT)/(sinnuccontentmOUR$FrT+sinnuccontentmOUR$FrC)
table(sinnuccontentmOUR$Class)
###Adding taxa
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
taxa = rbind(taxa, AAtaxa)
taxa = taxa[!duplicated(taxa$Species),]
sinnuccontentmOUR = merge(sinnuccontentmOUR, taxa, all.x = T)
#temp = merge(sinnuccontentm,sinnuccontentmOUR, by="Species")
#cor.test(temp$GAskew.heavy.x, temp$GAskew.heavy.y)
merged_fr = merge(sinnuccontentm,sinnuccontentn, by="Species")
cor.test(merged_fr$GAskew.heavy, merged_fr$meanTGACskew, method = "spearman")
ggviolin(sinnuccontentn, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrT",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentn, x = "Class", y = "FrG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentn, x = "Class", y = "meanTGACskew", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "meanTGACskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(sinnuccontentn[sinnuccontentn$Class %in% colder,]$meanTGACskew, sinnuccontentn[sinnuccontentn$Class %in% warmer,]$meanTGACskew, paired=F)
ggviolin(sinnuccontentn, x = "Class", y = "FrT", select = c("Mammalia","Aves"), ylab = "FrT",
order=c("Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#c73a69", "#c2464c"), yscale = "log2")
wilcox.test(sinnuccontentn[sinnuccontentn$Class == "Mammalia",]$FrT, sinnuccontentn[sinnuccontentn$Class == "Aves",]$FrT, paired=F)
ggviolin(sinnuccontentn, x = "Class", y = "FrT", select = c("Actinopterygii", "Reptilia"), ylab = "FrT",
order=c("Actinopterygii", "Reptilia"), add = "boxplot", fill="Class", palette=c("#6760db", "#9145c4"), yscale = "log2")
wilcox.test(sinnuccontentn[sinnuccontentn$Class == "Actinopterygii",]$FrT, sinnuccontentn[sinnuccontentn$Class == "Reptilia",]$FrT, paired=F)
ggviolin(sinnuccontentm, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrA",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentm, x = "Class", y = "FrC", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentm, x = "Class", y = "GAskew.heavy", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "GAskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(sinnuccontentm[sinnuccontentm$Class %in% colder,]$GAskew.heavy, sinnuccontentm[sinnuccontentm$Class %in% warmer,]$GAskew.heavy, paired=F)
ggviolin(sinnuccontentmOUR, x = "Class", y = "FrT", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrA",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentmOUR, x = "Class", y = "FrC", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "FrG",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), yscale = "log2")
ggviolin(sinnuccontentmOUR, x = "Class", y = "GAskew.heavy", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "GAskew",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(sinnuccontentmOUR[sinnuccontentmOUR$Class %in% colder,]$GAskew.heavy, sinnuccontentmOUR[sinnuccontentmOUR$Class %in% warmer,]$GAskew.heavy, paired=F)
tm = read.table('../Data/1raw/FishBaseTemperature.txt', header=T)
tm = tm %>% group_by(Species) %>% summarise(temperature = median(Temperature))
tm = read.table('../Data/1raw/FishBaseTemperature.txt', header=T)
tm = tm %>% group_by(Species) %>% summarise(temperature = median(Temperature))
View(tm)
temp=merge(sinnuccontentn, tm)
cor.test(temp$temperature, temp$meanTGACskew, method = "spearman")
View(temp)
f=ggscatter(temp, x = "temperature", y = "meanTGACskew",
color = "#c99bc9", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Mean annual water temperature, ?C",  ylim=c(0.1, 0.65), xlim=c(0,30))+stat_cor(method = "spearman", label.x = 2.5, label.y = 0.64, aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f
f=ggscatter(temp, x = "temperature", y = "meanTGACskew",
color = "#c99bc9", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Mean annual water temperature, ?C")
f
tm = read.table('../Data/1raw/FishBaseTemperature.txt', header=T)
tm = tm %>% group_by(Species) %>% summarise(temperature = median(Temperature))
temp=merge(sinnuccontentn, tm)
cor.test(temp$temperature, temp$meanTGACskew, method = "spearman")
f=ggscatter(temp, x = "temperature", y = "meanTGACskew",
color = "#eb4034", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Mean annual water temperature, ?C")
f
