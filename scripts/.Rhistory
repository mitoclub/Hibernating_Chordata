View(alldata)
alldata$Temperature = as.numeric(gsub(",", ".", alldata$Temperature.C._White2003.2006.other.close.species))
alldata$GenerationLength_d = as.numeric(gsub(",", ".", alldata$GenerationLength_d))
alldata = alldata[alldata$T_C > 0,]
alldata = alldata[alldata$A_G > 0,]
alldata$TCdivAG = alldata$T_C / alldata$A_G
summary(lm(formula = TCdivAG ~ Temper + GenerationLength_d, data = alldata))
summary(lm(formula = TCdivAG ~ Temperature + GenerationLength_d, data = alldata))
summary(lm(formula = TCdivAG ~ scale(Temperature) + scale(GenerationLength_d), data = MUTALL))
summary(lm(formula = TCdivAG ~ scale(Temperature) + scale(GenerationLength_d), data = alldata))
summary(lm(formula = T_C ~ Temperature + GenerationLength_d, data = alldata))
summary(lm(formula = T_C ~ scale(Temperature) + scale(GenerationLength_d), data = alldata))
summary(lm(formula = T_C ~ Temperature + GenerationLength_d, data = alldata))
summary(lm(formula = T_C ~ scale(Temperature) + scale(GenerationLength_d), data = alldata))
alldata$MarsMono = alldata$Mars + alldata$Mono
table(alldata$MarsMono)
alldata$ColdSpecies = 0
alldata[MUTALL$alldata %in% alldata[alldata$Temperature <= mean(alldata[!is.na(alldata$Temperature),]$Temperature) & !is.na(alldata$Temperature),]$Species,]$ColdSpecies = 1
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutspec = read.csv('../data/2derived/internal_12_syn_mutspec_all.csv', row.names=1)
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
taxa = rbind(taxa, AAtaxa)
mutspec <- mutspec %>% separate(gene_and_species, c("Gene", "Species"), sep="__")
mutspec = merge(mutspec, taxa, all.x = T)
no_class = mutspec[is.na(mutspec$Class) & mutspec$Mut == "A>G" & mutspec$Gene == "Cytb" & mutspec$Mut == "T>C",]$Species
temptc = mutspec[mutspec$Mut == "T>C",]; temptc = temptc[c("Species", "MutSpec", "Gene", "Class")]; colnames(temptc) = c("Species", "T_C", "Gene", "Class")
tempag = mutspec[mutspec$Mut == "A>G",]; tempag = tempag[c("Species", "MutSpec", "Gene", "Class")]; colnames(tempag) = c("Species", "A_G", "Gene", "Class")
tempmutspectcag = merge(tempag, temptc)
meanmutspec = tempmutspectcag %>% group_by(Species, Class); meanmutspec = meanmutspec %>% summarise(A_G=mean(A_G), T_C=mean(T_C))
cytbmutspec = tempmutspectcag[tempmutspectcag$Gene == "Cytb",]
KT = read.table("../data/2derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
alldata = merge(meanmutspec, KT)
#alldata = merge(cytbmutspec, KT)
alldata$Temperature = as.numeric(gsub(",", ".", alldata$Temperature.C._White2003.2006.other.close.species))
alldata$GenerationLength_d = as.numeric(gsub(",", ".", alldata$GenerationLength_d))
alldata = alldata[alldata$T_C > 0,]
alldata = alldata[alldata$A_G > 0,]
alldata$TCdivAG = alldata$T_C / alldata$A_G
summary(lm(formula = T_C ~ Temperature + GenerationLength_d, data = alldata))
summary(lm(formula = T_C ~ scale(Temperature) + scale(GenerationLength_d), data = alldata))
summary(lm(formula = TCdivAG ~ Temperature + GenerationLength_d, data = alldata))
summary(lm(formula = TCdivAG ~ scale(Temperature) + scale(GenerationLength_d), data = alldata))
alldata$MarsMono = alldata$Mars + alldata$Mono; table(alldata$MarsMono)
alldata$ColdSpecies = 0
alldata[alldata$Species %in% alldata[alldata$Temperature <= mean(alldata[!is.na(alldata$Temperature),]$Temperature) & !is.na(alldata$Temperature),]$Species,]$ColdSpecies = 1
alldata[alldata$Species %in% alldata[alldata$Temperature <= mean(alldata[!is.na(alldata$Temperature),]$Temperature) & !is.na(alldata$Temperature),]$Species,]$ColdSpecies = 1; table(alldata$ColdSpecies)
alldata$AllColdSpecies = alldata$Hib.unconfirmedHib + alldata$Daily.unconfirmedDaily + alldata$MarsMono + alldata$ColdSpecies; table(alldata$AllColdSpecies)
alldata[alldata$AllColdSpecies > 0,]$AllColdSpecies = 1
alldata[alldata$AllColdSpecies > 0,]$AllColdSpecies = 1; table(alldata$AllColdSpecies)
summary(lm(formula = TCdivAG ~ AllColdSpecies + GenerationLength_d, data = alldata))
summary(lm(formula = TCdivAG ~ scale(GenerationLength_d), data = alldata))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutspec = read.csv('../data/2derived/internal_12_syn_mutspec_all.csv', row.names=1)
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
taxa = rbind(taxa, AAtaxa)
mutspec <- mutspec %>% separate(gene_and_species, c("Gene", "Species"), sep="__")
mutspec = merge(mutspec, taxa, all.x = T)
no_class = mutspec[is.na(mutspec$Class) & mutspec$Mut == "A>G" & mutspec$Gene == "Cytb" & mutspec$Mut == "T>C",]$Species
temptc = mutspec[mutspec$Mut == "T>C",]; temptc = temptc[c("Species", "MutSpec", "Gene", "Class")]; colnames(temptc) = c("Species", "T_C", "Gene", "Class")
tempag = mutspec[mutspec$Mut == "A>G",]; tempag = tempag[c("Species", "MutSpec", "Gene", "Class")]; colnames(tempag) = c("Species", "A_G", "Gene", "Class")
tempmutspectcag = merge(tempag, temptc)
meanmutspec = tempmutspectcag %>% group_by(Species, Class); meanmutspec = meanmutspec %>% summarise(A_G=mean(A_G), T_C=mean(T_C))
cytbmutspec = tempmutspectcag[tempmutspectcag$Gene == "Cytb",]
KT = read.table("../data/2derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
alldata = merge(meanmutspec, KT)
#alldata = merge(cytbmutspec, KT)
alldata$Temperature = as.numeric(gsub(",", ".", alldata$Temperature.C._White2003.2006.other.close.species))
alldata$GenerationLength_d = as.numeric(gsub(",", ".", alldata$GenerationLength_d))
alldata = alldata[alldata$T_C > 0,]
alldata = alldata[alldata$A_G > 0,]
alldata$TCdivAG = alldata$T_C / alldata$A_G
summary(lm(formula = T_C ~ Temperature + GenerationLength_d, data = alldata))
summary(lm(formula = T_C ~ scale(Temperature) + scale(GenerationLength_d), data = alldata))
summary(lm(formula = TCdivAG ~ Temperature + GenerationLength_d, data = alldata))
summary(lm(formula = TCdivAG ~ scale(Temperature) + scale(GenerationLength_d), data = alldata))
alldata$MarsMono = alldata$Mars + alldata$Mono; table(alldata$MarsMono)
alldata$ColdSpecies = 0
alldata[alldata$Species %in% alldata[alldata$Temperature <= mean(alldata[!is.na(alldata$Temperature),]$Temperature) & !is.na(alldata$Temperature),]$Species,]$ColdSpecies = 1; table(alldata$ColdSpecies)
alldata$AllColdSpecies = alldata$Hib.unconfirmedHib + alldata$Daily.unconfirmedDaily + alldata$MarsMono + alldata$ColdSpecies; table(alldata$AllColdSpecies)
alldata[alldata$AllColdSpecies > 0,]$AllColdSpecies = 1; table(alldata$AllColdSpecies)
summary(lm(formula = TCdivAG ~ AllColdSpecies + GenerationLength_d, data = alldata))
summary(lm(formula = TCdivAG ~ scale(GenerationLength_d), data = alldata))
unzip("../data/2derived/AllGenesCodonUsageNoOverlap.zip")
SynNuc = read.table("../data/2derived/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
unzip("../data/2derived/AllGenesCodonUsageNoOverlap.zip")
sinnuccontent = read.table("../data/2derived/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
sinnuccontent = read.table("../data/2derived/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
sinnuccontent = sinnuccontent[sinnuccontent$Gene != 'ND6',]
sinnuccontent = aggregate(list(sinnuccontent$NeutralA,sinnuccontent$NeutralT,sinnuccontent$NeutralG,sinnuccontent$NeutralC), by = list(sinnuccontent$Species), FUN = sum)
names(sinnuccontent) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontent$FrA = sinnuccontent$NeutralA / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrT = sinnuccontent$NeutralT / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrG = sinnuccontent$NeutralG / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrC = sinnuccontent$NeutralC / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
View(sinnuccontent)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
sinnuccontent = read.table("../data/2derived/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
sinnuccontent = sinnuccontent[sinnuccontent$Gene != 'ND6',]
sinnuccontent = aggregate(list(sinnuccontent$NeutralA,sinnuccontent$NeutralT,sinnuccontent$NeutralG,sinnuccontent$NeutralC), by = list(sinnuccontent$Species), FUN = sum)
names(sinnuccontent) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontent$FrA = sinnuccontent$NeutralA / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrT = sinnuccontent$NeutralT / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrG = sinnuccontent$NeutralG / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrC = sinnuccontent$NeutralC / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
KT = read.table("../data/2derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
KT$FrT= NULL
alldata = merge(sinnuccontent, KT)
alldata$Temperature = as.numeric(gsub(",", ".", alldata$Temperature.C._White2003.2006.other.close.species))
alldata$GenerationLength_d = as.numeric(gsub(",", ".", alldata$GenerationLength_d))
alldata$TG = alldata$FrT+alldata$FrG
alldata$AC = alldata$FrA+alldata$FrC
alldata$TG_ACSkew = (alldata$TG-alldata$AC)/(alldata$TG+alldata$AC); summary(alldata$TG_ACSkew)
summary(lm(TG_ACSkew ~ log2(Temperature)+log2(GenerationLength_d), data = alldata))
summary(lm(TG_ACSkew ~ scale(Temper)+scale(GenerationLength_d), data = allparameters))
summary(lm(TG_ACSkew ~ scale(Temper)+scale(GenerationLength_d), data = alldata))
summary(lm(TG_ACSkew ~ scale(Temperature)+scale(GenerationLength_d), data = alldata))
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Temperature), data = alldata))
alldata$AC_TGSkew = (alldata$AC-alldata$TG)/(alldata$TG+alldata$AC); summary(alldata$AC_TGSkew)
summary(lm(AC_TGSkew ~ log2(Temperature)+log2(GenerationLength_d), data = alldata))
summary(lm(AC_TGSkew ~ scale(Temperature)+scale(GenerationLength_d), data = alldata))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
sinnuccontent = read.table("../data/2derived/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
sinnuccontent = sinnuccontent[sinnuccontent$Gene != 'ND6',]
sinnuccontent = aggregate(list(sinnuccontent$NeutralA,sinnuccontent$NeutralT,sinnuccontent$NeutralG,sinnuccontent$NeutralC), by = list(sinnuccontent$Species), FUN = sum)
names(sinnuccontent) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontent$FrA = sinnuccontent$NeutralA / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrT = sinnuccontent$NeutralT / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrG = sinnuccontent$NeutralG / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrC = sinnuccontent$NeutralC / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
KT = read.table("../data/2derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
KT$FrT= NULL
alldata = merge(sinnuccontent, KT)
alldata$Temperature = as.numeric(gsub(",", ".", alldata$Temperature.C._White2003.2006.other.close.species))
alldata$GenerationLength_d = as.numeric(gsub(",", ".", alldata$GenerationLength_d))
alldata$TG = alldata$FrT+alldata$FrG
alldata$AC = alldata$FrA+alldata$FrC
alldata$AC_TGSkew = (alldata$AC-alldata$TG)/(alldata$TG+alldata$AC)
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Temperature), data = alldata))
summary(lm(AC_TGSkew ~ log2(Temperature)+log2(GenerationLength_d), data = alldata))
summary(lm(AC_TGSkew ~ scale(Temperature)+scale(GenerationLength_d), data = alldata))
alldata$MarsMono = alldata$Mars + alldata$Mono; table(alldata$MarsMono)
alldata$ColdSpecies = 0
alldata[alldata$Species %in% alldata[alldata$Temperature <= mean(alldata[!is.na(alldata$Temperature),]$Temperature) & !is.na(alldata$Temperature),]$Species,]$ColdSpecies = 1; table(alldata$ColdSpecies)
alldata$AllColdSpecies = alldata$Hib.unconfirmedHib + alldata$Daily.unconfirmedDaily + alldata$MarsMono + alldata$ColdSpecies
alldata[alldata$AllColdSpecies > 0,]$AllColdSpecies = 1; table(alldata$AllColdSpecies)
summary(lm(formula = AC_TGSkew ~ log2(GenerationLength_d)+AllColdSpecies, data = allparameters))
alldata$MarsMono = alldata$Mars + alldata$Mono; table(alldata$MarsMono)
alldata$ColdSpecies = 0
alldata[alldata$Species %in% alldata[alldata$Temperature <= mean(alldata[!is.na(alldata$Temperature),]$Temperature) & !is.na(alldata$Temperature),]$Species,]$ColdSpecies = 1; table(alldata$ColdSpecies)
alldata$AllColdSpecies = alldata$Hib.unconfirmedHib + alldata$Daily.unconfirmedDaily + alldata$MarsMono + alldata$ColdSpecies
alldata[alldata$AllColdSpecies > 0,]$AllColdSpecies = 1; table(alldata$AllColdSpecies)
summary(lm(formula = AC_TGSkew ~ log2(GenerationLength_d)+AllColdSpecies, data = AllColdSpecies))
alldata$MarsMono = alldata$Mars + alldata$Mono; table(alldata$MarsMono)
alldata$ColdSpecies = 0
alldata[alldata$Species %in% alldata[alldata$Temperature <= mean(alldata[!is.na(alldata$Temperature),]$Temperature) & !is.na(alldata$Temperature),]$Species,]$ColdSpecies = 1; table(alldata$ColdSpecies)
alldata$AllColdSpecies = alldata$Hib.unconfirmedHib + alldata$Daily.unconfirmedDaily + alldata$MarsMono + alldata$ColdSpecies
alldata[alldata$AllColdSpecies > 0,]$AllColdSpecies = 1; table(alldata$AllColdSpecies)
summary(lm(formula = AC_TGSkew ~ log2(GenerationLength_d)+AllColdSpecies, data = alldata))
summary(lm(formula = FrT ~ log2(GenerationLength_d)+AllColdSpecies, data = alldata))
corr.test(alldata$FrT~alldata$AllColdSpecies, method="Spearman")
cor.test(alldata$FrT~alldata$AllColdSpecies, method="Spearman")
cor.test(alldata$FrT,alldata$AllColdSpecies, method="Spearman")
cor.test(alldata$FrT,alldata$AllColdSpecies, method="spearman")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutspec = read.csv('../data/2derived/internal_12_syn_mutspec_all.csv', row.names=1)
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
taxa = rbind(taxa, AAtaxa)
mutspec <- mutspec %>% separate(gene_and_species, c("Gene", "Species"), sep="__")
mutspec = merge(mutspec, taxa, all.x = T)
no_class = mutspec[is.na(mutspec$Class) & mutspec$Mut == "A>G" & mutspec$Gene == "Cytb" & mutspec$Mut == "T>C",]$Species
temptc = mutspec[mutspec$Mut == "T>C",]; temptc = temptc[c("Species", "MutSpec", "Gene", "Class")]; colnames(temptc) = c("Species", "A_G.heavy", "Gene", "Class")
tempag = mutspec[mutspec$Mut == "A>G",]; tempag = tempag[c("Species", "MutSpec", "Gene", "Class")]; colnames(tempag) = c("Species", "T_C.heavy", "Gene", "Class")
tempmutspectcag = merge(tempag, temptc)
meanmutspec = tempmutspectcag %>% group_by(Species, Class); meanmutspec = meanmutspec %>% summarise(T_C.heavy=mean(T_C.heavy), A_G.heavy=mean(A_G.heavy))
cytbmutspec = tempmutspectcag[tempmutspectcag$Gene == "Cytb",]
KT = read.table("../data/2derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
alldata = merge(meanmutspec, KT)
#alldata = merge(cytbmutspec, KT)
alldata$Temperature = as.numeric(gsub(",", ".", alldata$Temperature.C._White2003.2006.other.close.species))
alldata$GenerationLength_d = as.numeric(gsub(",", ".", alldata$GenerationLength_d))
alldata = alldata[alldata$A_G.heavy > 0,]
alldata = alldata[alldata$T_C.heavy > 0,]
alldata$AGdivTC.heavy = alldata$A_G.heavy / alldata$T_C.heavy
summary(lm(formula = A_G.heavy ~ Temperature + GenerationLength_d, data = alldata))
summary(lm(formula = A_G.heavy ~ scale(Temperature) + scale(GenerationLength_d), data = alldata))
summary(lm(formula = AGdivTC.heavy ~ Temperature + GenerationLength_d, data = alldata))
summary(lm(formula = AGdivTC.heavy ~ scale(Temperature) + scale(GenerationLength_d), data = alldata))
alldata$MarsMono = alldata$Mars + alldata$Mono; table(alldata$MarsMono)
alldata$ColdSpecies = 0
alldata[alldata$Species %in% alldata[alldata$Temperature <= mean(alldata[!is.na(alldata$Temperature),]$Temperature) & !is.na(alldata$Temperature),]$Species,]$ColdSpecies = 1; table(alldata$ColdSpecies)
alldata$AllColdSpecies = alldata$Hib.unconfirmedHib + alldata$Daily.unconfirmedDaily + alldata$MarsMono + alldata$ColdSpecies
alldata[alldata$AllColdSpecies > 0,]$AllColdSpecies = 1; table(alldata$AllColdSpecies)
summary(lm(formula = AGdivTC.heavy ~ AllColdSpecies + GenerationLength_d, data = alldata))
summary(lm(formula = AGdivTC.heavy ~ scale(GenerationLength_d), data = alldata))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
sinnuccontent = read.table("../data/2derived/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
sinnuccontent = sinnuccontent[sinnuccontent$Gene != 'ND6',]
sinnuccontent = aggregate(list(sinnuccontent$NeutralA,sinnuccontent$NeutralT,sinnuccontent$NeutralG,sinnuccontent$NeutralC), by = list(sinnuccontent$Species), FUN = sum)
names(sinnuccontent) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontent$FrT.heavy = sinnuccontent$NeutralA / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrA.heavy = sinnuccontent$NeutralT / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrC.heavy = sinnuccontent$NeutralG / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrG.heavy = sinnuccontent$NeutralC / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
KT = read.table("../data/2derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
KT$FrT= NULL
alldata = merge(sinnuccontent, KT)
alldata$Temperature = as.numeric(gsub(",", ".", alldata$Temperature.C._White2003.2006.other.close.species))
alldata$GenerationLength_d = as.numeric(gsub(",", ".", alldata$GenerationLength_d))
alldata$AC.heavy = alldata$FrA.heavy+alldata$FrC.heavy
alldata$TG.heavy = alldata$FrT.heavy+alldata$FrG.heavy
alldata$TG_ACSkew = (alldata$TG.heavy-alldata$AC.heavy)/(alldata$AC.heavy+alldata$TG.heavy)
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Temperature), data = alldata))
summary(lm(formula = FrA.heavy ~ scale(GenerationLength_d)+scale(Temperature), data = alldata))
summary(lm(AC_TGSkew ~ log2(Temperature)+log2(GenerationLength_d), data = alldata))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
sinnuccontent = read.table("../data/2derived/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
sinnuccontent = sinnuccontent[sinnuccontent$Gene != 'ND6',]
sinnuccontent = aggregate(list(sinnuccontent$NeutralA,sinnuccontent$NeutralT,sinnuccontent$NeutralG,sinnuccontent$NeutralC), by = list(sinnuccontent$Species), FUN = sum)
names(sinnuccontent) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
sinnuccontent$FrT.heavy = sinnuccontent$NeutralA / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrA.heavy = sinnuccontent$NeutralT / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrC.heavy = sinnuccontent$NeutralG / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
sinnuccontent$FrG.heavy = sinnuccontent$NeutralC / (sinnuccontent$NeutralA + sinnuccontent$NeutralT + sinnuccontent$NeutralG + sinnuccontent$NeutralC)
KT = read.table("../data/2derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
KT$FrT= NULL
alldata = merge(sinnuccontent, KT)
alldata$Temperature = as.numeric(gsub(",", ".", alldata$Temperature.C._White2003.2006.other.close.species))
alldata$GenerationLength_d = as.numeric(gsub(",", ".", alldata$GenerationLength_d))
alldata$AC.heavy = alldata$FrA.heavy+alldata$FrC.heavy
alldata$TG.heavy = alldata$FrT.heavy+alldata$FrG.heavy
alldata$TG_ACSkew = (alldata$TG.heavy-alldata$AC.heavy)/(alldata$AC.heavy+alldata$TG.heavy)
summary(lm(formula = FrA.heavy ~ scale(GenerationLength_d)+scale(Temperature), data = alldata))
summary(lm(TG_ACSkew ~ log2(Temperature)+log2(GenerationLength_d), data = alldata))
summary(lm(TG_ACSkew ~ scale(Temperature)+scale(GenerationLength_d), data = alldata))
knitr::opts_chunk$set(echo = TRUE)
taxavictor = read.csv('../data/2derived/Classes_from_Victor.csv', row.names=1)
taxavictor = read.csv('../data/1raw/Classes_from_Victor.csv', row.names=1)
View(taxavictor)
taxavictor = read.csv('../data/1raw/Classes_from_Victor.csv')
View(taxavictor)
taxavictor = read.csv('../data/1raw/Classes_from_Victor.csv', header = T)
View(taxavictor)
taxavictor = read.csv('../data/1raw/Classes_from_Victor.csv', header = T, sep = ";")
View(taxavictor)
taxavictor = read.csv('../data/1raw/Classes_from_Victor.csv', header = F, sep = ";")
View(taxavictor)
taxavictor = read.csv('../data/1raw/Classes_from_Victor.csv', header = c("Species", "Class"), sep = ";")
View(taxavictor)
taxavictor = read.csv('../data/1raw/Classes_from_Victor.csv', header = F, sep = ";")
colnames(taxavictor) = c("Species", "Class")
View(taxavictor)
colnames(taxavictor) = c("Species", "Class"); taxavictor$Species = gsub("", "_")
colnames(taxavictor) = c("Species", "Class"); taxavictor$Species = gsub(taxavictor$Species, "", "_")
colnames(taxavictor) = c("Species", "Class"); taxavictor$Species = gsub(taxavictor$Species, " ", "_")
taxavictor$Species
taxavictor = read.csv('../data/1raw/Classes_from_Victor.csv', header = F, sep = ";")
colnames(taxavictor) = c("Species", "Class");
taxavictor$Species = gsub(taxavictor$Species, " ", "_")
View(taxavictor)
taxavictor = read.csv('../data/1raw/Classes_from_Victor.csv', header = F, sep = ";")
colnames(taxavictor) = c("Species", "Class");
taxavictor$Species = gsub(" ", "_",  taxavictor$Species)
View(taxavictor)
table(taxavictor$Class)
taxavictor[taxavictor$SClass == "Herviviricetes",]
taxavictor[taxavictor$SClass == "Herviviricetes",]
taxavictor[taxavictor$Class == "Herviviricetes",]
taxavictor[taxavictor$Class == "Herviviricetes",]
a = taxavictor[taxavictor$Class == "Herviviricetes",]
a
View(a)
taxavictor[taxavictor$Class == "Herviviricetes",]$Species
taxavictor[taxavictor$Class == "Herviviricetes",]$Class = "Mammalia"
table(taxavictor$Class)
taxavictor[taxavictor$Class == "Lepidosauria",]$Class = "Reptilia"
taxavictor[taxavictor$Class == "",]$Class
taxavictor[taxavictor$Class == "",]$Class = "Reptilia"
table(taxavictor$Class)
taxavictor[taxavictor$Class == "Actinopteri",]$Class = "Actinopterigii"
table(taxavictor$Class)
write.table(taxavictor, file='../data/1raw/Classes_from_Victor.txt')
write.table(taxavictor, file='../data/1raw/Classes_from_Victor.txt', row.names = F)
taxavictor = read.table('../data/1raw/Classes_from_Victor.txt', header = T)
taxavictor = read.table('../data/1raw/Classes_from_Victor.txt', header = T)
View(taxavictor)
View(taxavictor)
taxa = merge(taxa, AAtaxa)
mutspec = read.csv('../data/2derived/internal_12_syn_mutspec_all.csv', row.names=1)
taxavictor = read.table('../data/1raw/Classes_from_Victor.txt', header = T)
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
taxa = merge(taxa, AAtaxa)
mutspec = read.csv('../data/2derived/internal_12_syn_mutspec_all.csv', row.names=1)
taxavictor = read.table('../data/1raw/Classes_from_Victor.txt', header = T)
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
View(taxa)
View(AAtaxa)
View(taxa)
View(taxavictor)
taxa = merge(taxa, AAtaxa)
unique(taxa$Species)
mutspec = read.csv('../data/2derived/internal_12_syn_mutspec_all.csv', row.names=1)
taxavictor = read.table('../data/1raw/Classes_from_Victor.txt', header = T)
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
unique(taxa$Species)
taxa = rbind(taxa, AAtaxa)
unique(taxa$Species)
length(unique(taxa$Species))
taxa= rbind(taxa, taxavictor)
length(unique(taxa$Species))
mutspec <- mutspec %>% separate(gene_and_species, c("Gene", "Species"), sep="__")
knitr::opts_chunk$set(echo = TRUE)
mutspec = read.csv('../data/2derived/internal_12_syn_mutspec_all.csv', row.names=1)
taxavictor = read.table('../data/1raw/Classes_from_Victor.txt', header = T)
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
taxa = rbind(taxa, AAtaxa)
taxa= rbind(taxa, taxavictor)
length(unique(taxa$Species))
mutspec <- mutspec %>% separate(gene_and_species, c("Gene", "Species"), sep="__")
library(tidyr)
mutspec = read.csv('../data/2derived/internal_12_syn_mutspec_all.csv', row.names=1)
taxavictor = read.table('../data/1raw/Classes_from_Victor.txt', header = T)
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
taxa = rbind(taxa, AAtaxa)
taxa= rbind(taxa, taxavictor)
length(unique(taxa$Species))
mutspec <- mutspec %>% separate(gene_and_species, c("Gene", "Species"), sep="__")
mutspec = merge(mutspec, taxa, all.x = T)
no_class = mutspec[is.na(mutspec$Class) & mutspec$Mut == "A>G" & mutspec$Gene == "Cytb" & mutspec$Mut == "T>C",]$Species
temptc = mutspec[mutspec$Mut == "T>C",]; temptc = temptc[c("Species", "MutSpec", "Gene", "Class")]; colnames(temptc) = c("Species", "A_G.heavy", "Gene", "Class")
tempag = mutspec[mutspec$Mut == "A>G",]; tempag = tempag[c("Species", "MutSpec", "Gene", "Class")]; colnames(tempag) = c("Species", "T_C.heavy", "Gene", "Class")
tempmutspectcag = merge(tempag, temptc)
View(tempmutspectcag)
table(tempmutspectcag$Class)
View(tempmutspectcag)
mutspec = read.csv('../data/2derived/internal_12_syn_mutspec_all.csv', row.names=1)
taxavictor = read.table('../data/1raw/Classes_from_Victor.txt', header = T)
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
taxa = rbind(taxa, AAtaxa)
taxa= rbind(taxa, taxavictor)
length(unique(taxa$Species))
mutspec <- mutspec %>% separate(gene_and_species, c("Gene", "Species"), sep="__")
mutspec = merge(mutspec, taxa, all.x = T)
View(mutspec)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutspec = read.csv('../data/2derived/internal_12_syn_mutspec_all.csv', row.names=1)
taxavictor = read.table('../data/1raw/Classes_from_Victor.txt', header = T)
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
taxa = rbind(taxa, AAtaxa)
taxa= rbind(taxa, taxavictor)
View(taxa)
taxa %>% distinct(Species, .keep_all=TRUE)
View(taxa)
length(unique(taxa$Species))
taxa %>% distinct(Species)
View(taxa)
taxa %>% distinct()
length(unique(taxa$Species))
length(unique(taxa))
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
library(tidyr)
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutspec = read.csv('../data/2derived/internal_12_syn_mutspec_all.csv', row.names=1)
taxavictor = read.table('../data/1raw/Classes_from_Victor.txt', header = T)
taxa = read.table("../data/2derived/TaxaFromKostya.txt", header = T)
AA = read.table("../data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AAtaxa = AA[c("Species", "Class")]
taxa = rbind(taxa, AAtaxa)
taxa = rbind(taxa, taxavictor)
taxa %>% distinct()
mutspec <- mutspec %>% separate(gene_and_species, c("Gene", "Species"), sep="__")
mutspec = merge(mutspec, taxa, all.x = T)
View(mutspec)
no_class = mutspec[is.na(mutspec$Class) & mutspec$Mut == "A>G" & mutspec$Gene == "Cytb" & mutspec$Mut == "T>C",]$Species
no_class
